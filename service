#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
from __future__ import (
    absolute_import, division, print_function, unicode_literals
)
from io import open
# let's just pretend that this is Python 3


from time import sleep, time
from datetime import date
from requests import Session
import json
import shutil
import os
import sys
import platform

URL = "https://www.chaosdorf.de/~ytvwld/freitagsfoo.json"
FFTALKS_BASE_URL = "https://fftalks.chaosdorf.space/"
LOADING_DATA = {
    "hosts": ["..."],
    "date": str(date.today()),
    "talks": [{
        "title": "...",
        "description": "...",
        "persons": [],
    }]
}


session = Session()


def post_exception(type, value, traceback):
    """
    Post an exception to fftalks.
    
    But just do this if it's noteworthy which means:
     * We're running on info-beamer hosted.
     * This is not a KeyboardInterrupt.
    """
    if type == KeyboardInterrupt:
        return
    print("exception:", type, value, traceback)
    hostname = platform.node()
    if hostname.startswith("info-beamer"):
        session.post(FFTALKS_BASE_URL + "pi/error", json={
            "source": "python",
            "exc_info": (type, value, traceback),
            "hostname": hostname,
        })
    else:
        print("Not running on an info-beamer, so not logging exception.")


def save_bytes(content):
    curr_time = time()
    filename = "freitagsfoo-%s.json" % str(curr_time)
    f = open(filename, "wb")
    f.write(content)
    f.close()
    shutil.copy(filename, "freitagsfoo.json")
    shutil.copy(filename, "talks_screen/freitagsfoo.json")
    shutil.copy(filename, "title_screen/freitagsfoo.json")
    os.remove(filename)


# try to POST exceptions when crashing
sys.excepthook = post_exception

# first, save dummy data
save_bytes(json.dumps(LOADING_DATA))

# then, repeatetly fetch the real data
while True:
    r = session.get(URL)
    save_bytes(r.text)
    sleep(60)
