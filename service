#!/usr/bin/python3
from io import BytesIO
from time import sleep, time
from contextlib import suppress
from datetime import date
from pathlib import Path
from requests import Session
import json
import shutil
import tarfile
import os

PAHO_URL = "https://github.com/eclipse/paho.mqtt.python/archive/refs/tags/v1.6.1.tar.gz"
URL = "https://www.chaosdorf.de/~ytvwld/freitagsfoo.json"
LOADING_DATA = {
    "hosts": ["..."],
    "date": str(date.today()),
    "talks": [{
        "title": "...",
        "description": "...",
        "persons": [],
    }]
}
FILENAME = "freitagsfoo.json"
FOLDERS_TO_WRITE = (".", "talks_screen", "title_screen", "next_screen")


def save_bytes(content):
    curr_time = time()
    filename = "freitagsfoo-%s.json" % str(curr_time)
    f = open(filename, "wb")
    f.write(content)
    f.close()
    for folder in FOLDERS_TO_WRITE:
        shutil.copy(filename, "{}/{}".format(folder, FILENAME))
    os.remove(filename)


def break_up_text(text: str) -> str:
    lines = []
    for line in text.splitlines():
        lines += break_up_line(line)
    return "\n".join(lines)


def break_up_line(line: str) -> list:
    lines = []
    curr_line = ""
    words = line.split(" ")
    while words:
        for word in words[:]:
            speculative_line = curr_line + " " + word
            if len(speculative_line) >= 50:
                lines.append(curr_line)
                curr_line = ""
                break
            words.pop(0)
            curr_line = speculative_line
        else:
            lines.append(curr_line)
    return lines


def download_and_extract_paho(session):
    req = session.get(PAHO_URL)
    req.raise_for_status()
    with tarfile.open(fileobj=BytesIO(req.content), mode="r:gz") as tar:
        folder = Path(tar.firstmember.name)
        tar.extractall()
    shutil.copytree(folder / "src/paho", "paho")
    shutil.rmtree(folder)


save_bytes(json.dumps(LOADING_DATA).encode())
session = Session()

if not os.path.exists("paho"):
    download_and_extract_paho(session)

import paho.mqtt.client
mqtt = paho.mqtt.client.Client()
mqtt.connect("mqttserver.chaosdorf.space")
mqtt.loop_start()
mqtt.publish("freitagsfoo/infobeamer/serial", os.environ.get("SERIAL"))

while True:
    data = session.get(URL).json()
    for talk in data["talks"]:
        talk["description"] = break_up_text(talk["description"])
    save_bytes(json.dumps(data, ensure_ascii=False).encode())
    sleep(60)
